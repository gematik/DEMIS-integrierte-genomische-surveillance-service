# Default values for integrierte-genomische-surveillance-service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Number of Pod Replicas desired
replicaCount: 2

# Enables debug mode
debug:
  enable: false

# Required Values for the Chart
required:
  # Define the docker image
  image:
    # The repository where is stored the docker image "igs-service"
    repository: europe-west3-docker.pkg.dev/gematik-all-infra-prod/demis-dev
    # The name of the image
    name: igs-service
    # Overrides the image tag whose default is the chart appVersion. 
    # If not given, the Chart AppVersion will be used
    tag: null

# Define custom configuration values
# The Entries will be read from the given (external) Secrets and injected in the container with the same name.
# IMPORTANT: these values must be defined in the Secret Objects
config:
  # The (external) Secret Objects containing the API Key entry
  secrets:
    # The (external) Secret for IGS
    igs:
      # The name of the (external) Secret for IGS and the entries to be used and mapped
      name: igs-secret
      entries:
        S3_STORAGE_TLS_CERTIFICATE: S3_STORAGE_TLS_CERTIFICATE
        S3_STORAGE_TLS_CERTIFICATE_INTERNAL: S3_STORAGE_TLS_CERTIFICATE_INTERNAL
    minio:
      # The name of the (external) Secret for MinIO and the entries to be used and mapped
      name: minio-secret
      entries:
        S3_ACCESS_KEY: MINIO_ROOT_USER
        S3_SECRET_KEY: MINIO_ROOT_PASSWORD

# Extra Labels to be added
# E.g.
# customLabels:
#   my-label: my-label-value
customLabels: {}

# Extra labels for deployments
deploymentLabels: {}

# Extra Environment Variables to be defined
# customEnvVars
#   key: value
customEnvVars:
  S3_URL: "https://igs-storage.ingress.local"
  DEMIS_NETWORK_FHIR_STORAGE_WRITER_ADDRESS: "http://fhir-storage-writer.demis.svc.cluster.local"
  DEMIS_NETWORK_VALIDATION_SERVICE_ADDRESS: "http://validation-service.demis.svc.cluster.local"
  DEMIS_NETWORK_CONTENT_ENRICHMENT_SERVICE_ADDRESS: "http://context-enrichment-service.demis.svc.cluster.local"
  FEATURE_FLAG_NEW_API_ENDPOINTS: "false"

# Define custom Container Entrypoint and Arguments (e.g. JVM Tuning)
# If not given, the Entrypoint defined in Dockerfile will be used
application:
  entrypoint: ["java"]
  parameters: ["-XX:ActiveProcessorCount=2", "-XX:MaxRAMPercentage=95.0", "-XX:+TieredCompilation", "-XX:+UseSerialGC", "-jar", "-Xmx1G", "/app.jar"]

# Define Image Pull Secrets if using private registry
imagePullSecrets: []
imagePullPolicy: IfNotPresent
nameOverride: "igs-service"
fullnameOverride: "igs-service"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/path: "/actuator/prometheus"
  prometheus.io/port: "8080"

# Pod Security Context - applies to all containers in a Pod
podSecurityContext:
  # The GID to tell the Kubelet to modify permissions of a volume owned by a pod
  fsGroup: 10000
  # Determines when to apply fsGroup actions - "Always" is the default
  fsGroupChangePolicy: "OnRootMismatch"
  # Which GID container process is assigned
  runAsGroup: 10000
  # Determine whether container process starts as root (UID 0)
  runAsNonRoot: true
  # Which UID container process is assigned
  runAsUser: 10000

# Container Security Context for a single container - Takes precedence over PodSecurityContext
securityContext:
  #defines whether container can be granted privileges beyond the parent process spawing the process
  allowPrivilegeEscalation: false
  #Define whether the container has privileged access e.g. CAP_SYS_ADMIN capability and SELinux spc_t type
  privileged: false
  #Usually no longer required. Determines whether /proc is masked to the container. Do not mount /proc from a host to a container
  procMount: Default
  # The SELinux context to be applied to the container. Must not be explicitly set to Unconfined.
  seccompProfile:
    type: "RuntimeDefault"
  #Which GID container process is assigned
  runAsGroup: 10000
  # Determine whether container process starts as root (UID 0)
  runAsNonRoot: true
  #Which UID container process is assigned
  runAsUser: 10000
  # Sets the file system as read-only
  readOnlyRootFilesystem: true
  #Ability to remove and /or add Linux Capabilities
  capabilities:
    drop:
      - all

service:
  type: ClusterIP
  ports:
    http: 8080

# Default Resources
resources:
  limits:
    memory: "500Mi"
  requests:
    cpu: "1000m"
    memory: "500Mi"

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

istio:
  enable: false
  validateJwt: true
